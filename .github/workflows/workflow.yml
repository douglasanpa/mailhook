---
name: workflow

on:
  - push
  - pull_request

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@master
      - name: setup go
        uses: actions/setup-go@v2
        with:
          go-version: '1.15'
      - name: go
        env:
          GOOS: linux
          GOARCH: amd64
        run: |
          go vet *.go
          go get -v -d .
          go test -v -cover -race .
          go build -v -a .
      - name: upload build
        uses: actions/upload-artifact@v2
        with:
          name: mailhook
          path: mailhook

  snyk:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@master
      - name: setup node
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: snyk
        env:
          SNYK_API_TOKEN: ${{ secrets.SNYK_API_TOKEN }}
        run: |
          npm install --prefix="${HOME}" -g snyk
          "${HOME}/bin/snyk" auth "${SNYK_API_TOKEN}"
          "${HOME}/bin/snyk" test --file=go.mod

  release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: [build, snyk]
    steps:
      - name: checkout
        uses: actions/checkout@master
      - name: download build
        uses: actions/download-artifact@v2
        with:
          name: mailhook
      - name: generate checksums
        id: checksums
        run: echo "::set-output name=sha256sums::$(sha256sum mailhook)"
      - name: create release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: |
            sha256 checksums
            ```
            ${{ steps.checksums.outputs.sha256sums }}
            ```
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: upload release build
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./mailhook
          asset_name: mailhook
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
